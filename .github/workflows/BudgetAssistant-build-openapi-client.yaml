name: BudgetAssistant-build-openapi-client

on:
  push:
    paths:
      - 'BudgetAssistant-backend/**'
      - '.github/workflows/BudgetAssistant-build-openapi-client.yaml'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./BudgetAssistant-backend
    strategy:
      max-parallel: 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          conda env update --file environment.yml --name base
      - name: Install pip dependencies
        run: |
          conda install -c conda-forge gcc=12
          conda run -n base pip install -r requirements-dev.txt
      - name: Make manage.py executable
        run: chmod +x ./manage.py
      - name: Set Django Allowed Hosts
        run: echo "DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost,github-actions" >> $GITHUB_ENV
      - name: Generate OpenAPI schema
        env:
          DJANGO_SETTINGS_MODULE: pybackend.settings
          DATABASE_BACKEND: mysql
          EMAIL_HOST_PASSWORD: fake_password
          TEST_MODE: true
        run: |
          ./manage.py spectacular --color --file schema.yml
      - name: Generate OpenAPI Angular/Typescript client
        run: |
          openapi-generator-cli generate -i schema.yml -g typescript-angular -o ./api --additional-properties=modelPropertyNaming=camelCase,fileNaming=kebab-case,enumPropertyNaming=original,ngVersion=14.2.8,npmName=budget-assistant-client
      - name: Update package.json for npm
        run: |
          cd ./api
          npm init -y
          npm install
          DATE=$(date +%Y%m%d)
          COUNT=$(ls *.tgz 2>/dev/null | grep -c "$DATE")
          VERSION="$DATE-$((COUNT + 1))"
          jq --arg version "$VERSION" '.name="budget-assistant-client" | .version=$VERSION | .main="index.js" | .types="index.d.ts" | .files=["**/*"]' package.json > package.tmp.json
          mv package.tmp.json package.json
      - name: Package npm module
        run: |
          cd ./api
          npm pack
      - name: Print all files in the current directory
        run: ls -al
      - name: Upload npm package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: budget-assistant-client
          path: .*.tgz