name: BudgetAssistant-backend-unittests

on:
  push:
    paths:
      - 'BudgetAssistant-backend/**'
      - '.github/workflows/BudgetAssistant-backend-unittests.yaml'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./BudgetAssistant-backend
    strategy:
      max-parallel: 5
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MARIADB_USER: test_user
          MARIADB_PASSWORD: test_password
          MARIADB_DATABASE: test_db
          MARIADB_ROOT_PASSWORD: password
          #GRANT: ALL PRIVILEGES ON test_db.* TO 'test_user'@'%' IDENTIFIED BY 'test_password'
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=15s --health-timeout=10s --health-retries=20
    steps:
      - uses: actions/checkout@v4
      - name: Check if Mariadb is running
        run: |
          mysql -h 127.0.0.1 -u test_user -ptest_password -e "USE test_db;"
      - name: Set collation
        run: |
          mysql -h 127.0.0.1 -u test_user -ptest_password -e "ALTER DATABASE test_db CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
      - name: Verify collation
        run: |
          mysql -h 127.0.0.1 -u test_user -ptest_password -e "SELECT SCHEMA_NAME, DEFAULT_CHARACTER_SET_NAME, DEFAULT_COLLATION_NAME FROM information_schema.SCHEMATA WHERE SCHEMA_NAME = 'test_db';"
      - name: Set test_user permissions
        run: |
          #give test_user all permissions on test_db
          mysql -h 127.0.0.1 -u root -ppassword -e "GRANT ALL PRIVILEGES ON test_db.* TO 'test_user'@'%';"

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          conda env update --file environment.yml --name base
      - name: Install pip dependencies
        run: |
          conda install -c conda-forge gcc=12
          conda run -n base pip install -r requirements-dev.txt
          conda run -n base pip install pytest-django
          conda run -n base pip install mysqlclient

      - name: Run migrations
        env:
          DJANGO_SETTINGS_MODULE: pybackend.settings
          DATABASE_BACKEND: mysql
          EMAIL_HOST_PASSWORD: fake_password
        run: |
          python manage.py migrate

      - name: Run Pytest
        env:
          DJANGO_SETTINGS_MODULE: pybackend.settings
          DATABASE_BACKEND: mysql
          EMAIL_HOST_PASSWORD: fake_password

        run: pytest